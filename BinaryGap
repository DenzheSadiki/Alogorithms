    public class Solution
    {
        public int maxcount;
        public int count;
        public bool first = false;
        public bool second = false;
        public int firstindex;
        public int secondIndex;
	
        public int solution(int N)
        {

            var binary = Convert.ToString(N, 2);
            var array = binary.ToString().ToCharArray();

            for (int i = 0; i < array.Length; i++)
            {
                maxcount = CaluclateBinarayGap(i, int.Parse(array[i].ToString()));
            }
           
            return maxcount;
        }

        public int CaluclateBinarayGap(int index, int value)
        {
            if (value == 1 && first == false)
            {
                first = true;
                firstindex = index;
            }
	    
            if ((value == 1 && firstindex != index) && first == true)
            {

                var gap = (index - firstindex) - 1;

                maxcount = Math.Max(gap, maxcount);

                if (maxcount < 0)
                {
                    maxcount += 1;
                }

                firstindex = index;
    
            }
            return maxcount;
        }
    }
